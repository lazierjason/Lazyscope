<?xml version="1.0" encoding="utf-8"?>

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:toolbar="com.lazyscope.toolbar.*" xmlns:sidebar="com.lazyscope.sidebar.*"
		 width="100%" click="onClick(event)" creationComplete="onCreationComplete(event)" useHandCursor="true" mouseChildren="true" buttonMode="true" xmlns:control="com.lazyscope.control.*">

	<fx:Metadata>
		[Event(name="select", type="com.lazyscope.sidebar.SidebarEvent")]
		[Event(name="buttonClick", type="com.lazyscope.sidebar.SidebarEvent")]
		[Event(name="expand", type="com.lazyscope.sidebar.SidebarEvent")]
	</fx:Metadata>
	
	<fx:Declarations>
		<fx:Boolean id="selectable">true</fx:Boolean>
		<fx:Boolean id="_selected" />
		<fx:String id="title" />
		<fx:String id="includeAccounts" />
		<fx:String id="button" />
		<fx:String id="buttonTooltip" />
		<fx:Number id="buttonWidth" />
		<fx:Number id="buttonHeight" />
		<fx:Boolean id="expandable">true</fx:Boolean>
		<fx:Boolean id="expanding">false</fx:Boolean>
		<fx:Number id="alert" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import spark.components.List;
			protected function onClick(event:MouseEvent):void
			{
				if (selectable)
					selected = true;
			}
			
			protected function onTitleClick(event:MouseEvent):void
			{
				if (!selectable)
					expand(event);
			}
			
			protected function onButtonClick(event:MouseEvent):void
			{
				dispatchEvent(new SidebarEvent(SidebarEvent.BUTTON_CLICK));
				event.stopPropagation();
			}
			
			public function expand(event:MouseEvent, forceExpand:Boolean=false):void
			{
				expanding = forceExpand ? true : !expanding;
				if (event)
					event.stopPropagation();
				dispatchEvent(new SidebarEvent(SidebarEvent.EXPAND));
			}
			
			public function set selected(value:Boolean):void
			{
				if (_selected == value) return;
				_selected = value;
			
				if (_selected) {
					badge.count = 0;
					dispatchEvent(new SidebarEvent(Event.SELECT));
				}
			}
			
			public function get selected():Boolean
			{
				return _selected;
			}
			
			private var _child:UIComponent;
			public function set child(c:UIComponent):void
			{
				subContent.removeAllElements();
				_child = c;
				if (c) {
//					if (includeAccounts)
//						subBorder.visible = true;
					subContent.addElement(c);
					
					if (c is List) {
						var li:List = c as List;
						li.addEventListener(MouseEvent.CLICK, subClick, true, 10, true);
					}
				}
			}
			
			public function subClick(e:Event):void
			{
				e.preventDefault();
				e.stopPropagation();
				dispatchEvent(new SidebarEvent(Event.SELECT, e.currentTarget));
			}
			
			public function get child():UIComponent
			{
				return _child;
			}

			protected function onCreationComplete(event:FlexEvent):void
			{
				accountList.addEventListener(MouseEvent.CLICK, subClick, true, 10, true);
			}
		]]>
	</fx:Script>

	<s:Group width="100%" height="32" click="onTitleClick(event)">
		<s:Rect width="100%" height="100%" visible="{_selected}">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xb1bfd9" />
					<s:GradientEntry color="0x9aabc9" />
					<s:GradientEntry color="0x8196b9" />
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="3">
			<mx:Spacer width="0" />
			<s:Group visible="{expandable}" click="expand(event)">
				<s:Image id="expandIcon" source="app:///icon/icon_expand.png" visible="{!expanding}" top="-1" />
				<s:Image id="collapseIcon" source="app:///icon/icon_collapse.png" visible="{expanding}" top="-2" />
			</s:Group>
			<s:Label id="titleField" text="{title}" width="100%" fontWeight="{_selected?'bold':'normal'}" color="{_selected?0xFFFFFF:0x000000}" fontSize="13" />
			<toolbar:Badge id="badge" count="{alert}" color="{_selected?0x96A8C7:0xFFFFFF}" bgcolor="{_selected?0xFFFFFF:0x96A8C7}" />
			<control:Btn id="buttonField" skinClass="com.lazyscope.control.BtnSkin" iconPrefix="{button}" visible="{!!button}" includeInLayout="{!!button}" click="onButtonClick(event)" width="{buttonWidth}" height="{buttonHeight}" toolTip="{buttonTooltip}" />
			<mx:Spacer width="2" />
		</s:HGroup>
	</s:Group>
	<s:Group id="sub" top="34" width="100%" visible="{expandable &amp;&amp; expanding}" includeInLayout="{sub.visible}" contentBackgroundAlpha="0">
		<!--
		<s:Rect radiusX="5" radiusY="5" width="220" left="15" right="5" top="5" bottom="5">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" />
			</s:fill>
		</s:Rect>
		-->
		<s:VGroup left="0" gap="0" top="0" right="1" bottom="0" clipAndEnableScrolling="true">
			<sidebar:SidebarAccountList id="accountList" />
			<!--
			<s:Rect id="subBorder" width="80%" height="0" visible="false">
				<s:stroke>
					<s:SolidColorStroke color="0xEEEEEE" />
				</s:stroke>
			</s:Rect>
			-->
			<s:Group id="subContent" width="100%" clipAndEnableScrolling="true" />
		</s:VGroup>
	</s:Group>
</s:Group>
